package com.xpg.hssy.db.pojo;

import com.easy.util.EmptyUtil;
import com.xpg.hssy.constant.MyConstant;
import com.xpg.hssy.db.dao.DaoSession;
import com.xpg.hssy.db.dao.PileDao;
import com.xpg.hssy.db.dao.ShareTimeDao;
import com.xpg.hssychargingpole.R;

import java.util.List;

import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table PILE.
 */
public class Pile implements java.io.Serializable {

    private String pileId;
    private String pileName;
    private Integer type;
    private String location;
    private Float price;
    private String contactName;
    private String contactPhone;
    private String userid;
    private Double latitude;
    private Double longitude;
    private Double altitude;
    private Float ratedVoltage;
    private Float ratedCurrent;
    private Float power;
    private Integer auth;
    private Integer familyNumber;
    private Integer favor;
    private Integer shareState;
    private Float score;
    private Float avgLevel;
    private Integer operator;
    private String annotation;
    private String pilePortrait;
    private String coverCropImg;
    private String coverImg;
    private String desp;
    private Integer isIdle;
    private Integer acount;
    private Integer chargerNum;
    private Integer gprsType;
    private String factotry;
    private String facilities;
    private String funcType;
    private String ownerAvatar;
    private String ownerName;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient PileDao myDao;

    private List<ShareTime> pileShares;

    // KEEP FIELDS - put your custom fields here
	public static final int SHARE_STATUS_NO = 0;
	public static final int SHARE_STATUS_YES = 1;
	public static final int TYPE_AC = 2;
	public static final int TYPE_DC = 1;
	public static final int OPERATOR_PERSONAL = 0;
	public static final int OPERATOR_HSSY = 1;
	public static final int OPERATOR_NATION = 2;
	public static final int UNIDLE = 1;
	public static final int IDLE = 0;
	public static final int MAX_GRADE = 5;
	public static final int STATUS_OFFLINE = 0;
	public static final int STATUS_ONLINE = 1;
	public static final int OPERATION_NO = 0;
	public static final int OPERATION_YES = 1;

	//桩是否带GPRS
	public static final int TYPE_GPRS = 0;
	public static final int TYPE_GPRS_BLUETOOTH = 1;
	public static final int TYPE_BLUETOOTH = 2;

	//带GPRS的桩具有以下三种状态
	public static final int STATE_PERSION_FREE = 1; //空闲   //空闲、占用、维护
	public static final int STATE_PERSION_CONNECT = 2; //只连接未充电
	public static final int STATE_PERSION_CHARGING = 3; //充电进行中
	public static final int STATE_PERSION_GPRS_DISCONNECT = 4; //GPRS通讯中断
	public static final int STATE_PERSION_IN_MAINTAIN = 5; //检修中
	public static final int STATE_PERSION_IN_BOOK = 6; //预约
	public static final int STATE_PERSION_FAULT = 7; //故障
	public static final int STATE_PERSION_CHARGE_FINISHED = 8;//充电完成

	//是否收藏
	public static final int FAVOR_NOT = 0;
	public static final int FAVOR_YES = 1;

	private Integer pileType;//公共站内电桩类型

	private Integer runStatus;//运行状态

	private Integer chargingProgress;//充电进度
	private List<String> introImgs;
	private Integer occuNum;
	private Integer gprsNum;
	private Integer freeNum;
	private Integer directNum;
	private Integer alterNum;
    // KEEP FIELDS END

    public Pile() {
    }

    public Pile(String pileId) {
        this.pileId = pileId;
    }

    public Pile(String pileId, String pileName, Integer type, String location, Float price, String contactName, String contactPhone, String userid, Double latitude, Double longitude, Double altitude, Float ratedVoltage, Float ratedCurrent, Float power, Integer auth, Integer familyNumber, Integer favor, Integer shareState, Float score, Float avgLevel, Integer operator, String annotation, String pilePortrait, String coverCropImg, String coverImg, String desp, Integer isIdle, Integer acount, Integer chargerNum, Integer gprsType, String factotry, String facilities, String funcType, String ownerAvatar, String ownerName) {
        this.pileId = pileId;
        this.pileName = pileName;
        this.type = type;
        this.location = location;
        this.price = price;
        this.contactName = contactName;
        this.contactPhone = contactPhone;
        this.userid = userid;
        this.latitude = latitude;
        this.longitude = longitude;
        this.altitude = altitude;
        this.ratedVoltage = ratedVoltage;
        this.ratedCurrent = ratedCurrent;
        this.power = power;
        this.auth = auth;
        this.familyNumber = familyNumber;
        this.favor = favor;
        this.shareState = shareState;
        this.score = score;
        this.avgLevel = avgLevel;
        this.operator = operator;
        this.annotation = annotation;
        this.pilePortrait = pilePortrait;
        this.coverCropImg = coverCropImg;
        this.coverImg = coverImg;
        this.desp = desp;
        this.isIdle = isIdle;
        this.acount = acount;
        this.chargerNum = chargerNum;
        this.gprsType = gprsType;
        this.factotry = factotry;
        this.facilities = facilities;
        this.funcType = funcType;
        this.ownerAvatar = ownerAvatar;
        this.ownerName = ownerName;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getPileDao() : null;
    }

    public String getPileId() {
        return pileId;
    }

    public void setPileId(String pileId) {
        this.pileId = pileId;
    }

    public String getPileName() {
        return pileName;
    }

    public void setPileName(String pileName) {
        this.pileName = pileName;
    }

    public Integer getType() {
        return type;
    }

    public void setType(Integer type) {
        this.type = type;
    }

    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    public Float getPrice() {
        return price;
    }

    public void setPrice(Float price) {
        this.price = price;
    }

    public String getContactName() {
        return contactName;
    }

    public void setContactName(String contactName) {
        this.contactName = contactName;
    }

    public String getContactPhone() {
        return contactPhone;
    }

    public void setContactPhone(String contactPhone) {
        this.contactPhone = contactPhone;
    }

    public String getUserid() {
        return userid;
    }

    public void setUserid(String userid) {
        this.userid = userid;
    }

    public Double getLatitude() {
        return latitude;
    }

    public void setLatitude(Double latitude) {
        this.latitude = latitude;
    }

    public Double getLongitude() {
        return longitude;
    }

    public void setLongitude(Double longitude) {
        this.longitude = longitude;
    }

    public Double getAltitude() {
        return altitude;
    }

    public void setAltitude(Double altitude) {
        this.altitude = altitude;
    }

    public Float getRatedVoltage() {
        return ratedVoltage;
    }

    public void setRatedVoltage(Float ratedVoltage) {
        this.ratedVoltage = ratedVoltage;
    }

    public Float getRatedCurrent() {
        return ratedCurrent;
    }

    public void setRatedCurrent(Float ratedCurrent) {
        this.ratedCurrent = ratedCurrent;
    }

    public Float getPower() {
        return power;
    }

    public void setPower(Float power) {
        this.power = power;
    }

    public Integer getAuth() {
        return auth;
    }

    public void setAuth(Integer auth) {
        this.auth = auth;
    }

    public Integer getFamilyNumber() {
        return familyNumber;
    }

    public void setFamilyNumber(Integer familyNumber) {
        this.familyNumber = familyNumber;
    }

    public Integer getFavor() {
        return favor;
    }

    public void setFavor(Integer favor) {
        this.favor = favor;
    }

    public Integer getShareState() {
        return shareState;
    }

    public void setShareState(Integer shareState) {
        this.shareState = shareState;
    }

    public Float getScore() {
        return score;
    }

    public void setScore(Float score) {
        this.score = score;
    }

    public Float getAvgLevel() {
        return avgLevel;
    }

    public void setAvgLevel(Float avgLevel) {
        this.avgLevel = avgLevel;
    }

    public Integer getOperator() {
        return operator;
    }

    public void setOperator(Integer operator) {
        this.operator = operator;
    }

    public String getAnnotation() {
        return annotation;
    }

    public void setAnnotation(String annotation) {
        this.annotation = annotation;
    }

    public String getPilePortrait() {
        return pilePortrait;
    }

    public void setPilePortrait(String pilePortrait) {
        this.pilePortrait = pilePortrait;
    }

    public String getCoverCropImg() {
        return coverCropImg;
    }

    public void setCoverCropImg(String coverCropImg) {
        this.coverCropImg = coverCropImg;
    }

    public String getCoverImg() {
        return coverImg;
    }

    public void setCoverImg(String coverImg) {
        this.coverImg = coverImg;
    }

    public String getDesp() {
        return desp;
    }

    public void setDesp(String desp) {
        this.desp = desp;
    }

    public Integer getIsIdle() {
        return isIdle;
    }

    public void setIsIdle(Integer isIdle) {
        this.isIdle = isIdle;
    }

    public Integer getAcount() {
        return acount;
    }

    public void setAcount(Integer acount) {
        this.acount = acount;
    }

    public Integer getChargerNum() {
        return chargerNum;
    }

    public void setChargerNum(Integer chargerNum) {
        this.chargerNum = chargerNum;
    }

    public Integer getGprsType() {
        return gprsType;
    }

    public void setGprsType(Integer gprsType) {
        this.gprsType = gprsType;
    }

    public String getFactotry() {
        return factotry;
    }

    public void setFactotry(String factotry) {
        this.factotry = factotry;
    }

    public String getFacilities() {
        return facilities;
    }

    public void setFacilities(String facilities) {
        this.facilities = facilities;
    }

    public String getFuncType() {
        return funcType;
    }

    public void setFuncType(String funcType) {
        this.funcType = funcType;
    }

    public String getOwnerAvatar() {
        return ownerAvatar;
    }

    public void setOwnerAvatar(String ownerAvatar) {
        this.ownerAvatar = ownerAvatar;
    }

    public String getOwnerName() {
        return ownerName;
    }

    public void setOwnerName(String ownerName) {
        this.ownerName = ownerName;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<ShareTime> getPileShares() {
        if (pileShares == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            ShareTimeDao targetDao = daoSession.getShareTimeDao();
            List<ShareTime> pileSharesNew = targetDao._queryPile_PileShares(pileId);
            synchronized (this) {
                if(pileShares == null) {
                    pileShares = pileSharesNew;
                }
            }
        }
        return pileShares;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetPileShares() {
        pileShares = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
	@Deprecated
	public int getMapIconId() {
		int  id = R.drawable.map_logo_icon;
		if (getOperator() == Pile.OPERATOR_PERSONAL) {
			if (getShareState() == null || getShareState() == Pile.SHARE_STATUS_NO) {
				id = R.drawable.map_logo_icon_gray;
			}
		} else if (getOperator() == Pile.OPERATOR_NATION) {
			id = R.drawable.map_logo_icon_nation;
		} else if (getOperator() == Pile.OPERATOR_HSSY) {
			id = R.drawable.map_logo_icon_hssy;

		}
		return id;
	}

	public List<ShareTime> peakPileShares() {
		return daoSession == null ? pileShares : getPileShares();
	}

	public Float getRatedPower() {
		return power;
	}

	public String getPileIdAsString() {
		return pileId != null ? pileId : "";
	}

	public String getPileNameAsString() {
		return pileName != null ? pileName : "";
	}

	public String getTypeAsString() {
		if (type == null) {
			return "未知";
		}
		switch (type) {
			case TYPE_AC:
				return "交流桩";
			case TYPE_DC:
				return "直流桩";
			default:
				return "未知";
		}
	}

	public String getLocationAsString() {
		return location != null ? location : "";
	}

	public String getPriceAsString() {
		return price != null ? price.toString() : "";
	}

	public String getContactNameAsString() {
		return contactName != null ? contactName : "";
	}

	public String getContactPhoneAsString() {
		return contactPhone != null ? contactPhone : "";
	}

	public String getUseridAsString() {
		return userid != null ? userid : "";
	}

	public String getLatitudeAsString() {
		return latitude != null ? latitude.toString() : "";
	}

	public String getLongitudeAsString() {
		return longitude != null ? longitude.toString() : "";
	}

	public String getAltitudeAsString() {
		return altitude != null ? altitude.toString() : "";
	}

	public String getRatedVoltageAsString() {
		return ratedVoltage != null ? ratedVoltage.toString() : "";
	}

	public String getRatedCurrentAsString() {
		return ratedCurrent != null ? ratedCurrent.toString() : "";
	}

	public String getPowerAsString() {
		return power != null ? power.toString() : "";
	}

	public String getAuthAsString() {
		return auth != null ? auth.toString() : "";
	}

	public String getFamilyNumberAsString() {
		return familyNumber != null ? familyNumber.toString() : "";
	}

	public String getFavorAsString() {
		return favor != null ? favor.toString() : "";
	}

	public String getShareStateAsString() {
		return shareState != null ? shareState.toString() : "";
	}

	public String getScoreAsString() {
		return score != null ? score.toString() : "";
	}

	public String getAvgLevelAsString() {
		return (avgLevel != null && avgLevel != 0) ? String.format("%.1f", avgLevel) + "分" : "暂无评分";
	}

	public String getOperatorAsString() {
		return operator != null ? operator.toString() : "";
	}

	public String getAnnotationAsString() {
		return annotation != null ? annotation : "";
	}

	public String getServerPriceAsString() {
		if (pileShares == null || pileShares.size() <= 0 || pileShares.get(0).getServicePay() == null) {
			return "未知价格";
		}
		return pileShares.get(0).getServicePay() + "元/kwh";
	}

	public List<String> getIntroImgs() {
		return introImgs;
	}

	public void setIntroImgs(List<String> introImgs) {
		this.introImgs = introImgs;
	}

	public Integer getOccuNum() {
		return occuNum;
	}

	public Integer getGprsNum() {
		return gprsNum;
	}

	public void setOccuNum(Integer gprsNum) {
		this.occuNum = occuNum;
	}

	public void setGprsNum(Integer gprsNum) {
		this.gprsNum = gprsNum;
	}

	public Integer getFreeNum() {
		return freeNum;
	}

	public void setFreeNum(Integer freeNum) {
		this.freeNum = freeNum;
	}


	public String getFactotryAsString() {
		return factotry == null ? "" : factotry;
	}

	public int[] getFacilitiesAsInt() {
		if (facilities != null && !"".equals(facilities)) {
			String[] temp = facilities.split(",");
			int[] int_amenities = new int[temp.length];
			for (int i = 0; i < temp.length; i++) {
				int_amenities[i] = Integer.parseInt(temp[i]);
			}
			return int_amenities;
		}
		return null;
	}

	public int getFuncTypeAsStringID() {
		if (EmptyUtil.isEmpty(funcType)) {
			return R.string.nothing;
		} else {
			int funType = Integer.parseInt(funcType);
			switch (funType) {
				case MyConstant.FUNCTION_TYPE_TRAFFIC:
					return R.string.traffic;
				case MyConstant.FUNCTION_TYPE_LIVING:
					return R.string.living;
				case MyConstant.FUNCTION_TYPE_MARKET:
					return R.string.super_market;
				case MyConstant.FUNCTION_TYPE_4S_SHOP:
					return R.string.car_shop;
				case MyConstant.FUNCTION_TYPE_SCHOOL:
					return R.string.school;
				case MyConstant.FUNCTION_TYPE_SCENIC:
					return R.string.scenic;
				case MyConstant.FUNCTION_TYPE_SERVICE_AREA:
					return R.string.service_area;
				case MyConstant.FUNCTION_TYPE_OFFICE:
					return R.string.office;
				case MyConstant.FUNCTION_TYPE_OTHER:
					return R.string.other;
				default:
					return R.string.nothing;
			}
		}
	}

	public Integer getRunStatus() {
		return runStatus == null ? STATE_PERSION_FAULT : runStatus;
	}

	public void setRunStatus(Integer runStatus) {
		this.runStatus = runStatus;
	}

	public int getRunStatusAsStringID() {
		if (runStatus == null) {
			return R.string.unknown;
		} else {
			if (runStatus == STATE_PERSION_FREE) {
				return R.string.idle;
			} else if (runStatus == STATE_PERSION_CHARGING || runStatus == STATE_PERSION_CHARGE_FINISHED) {
				return R.string.charging;
			} else if (runStatus == STATE_PERSION_CONNECT) {
				return R.string.occupy;
			} else if (runStatus == STATE_PERSION_IN_BOOK) {
				return R.string.booked;
			} else if (runStatus == STATE_PERSION_IN_MAINTAIN || runStatus == STATE_PERSION_FAULT) {
				return R.string.maintain;
			} else if (runStatus == STATE_PERSION_GPRS_DISCONNECT) {
				return R.string.offline_pile;
			} else {
				return R.string.unknown;
			}
		}
	}

	public Integer getChargingProgress() {
		return chargingProgress == null ? 0 : chargingProgress;
	}

	public void setChargingProgress(Integer chargingProgress) {
		this.chargingProgress = chargingProgress;
	}

	public Integer getDirectNum() {
		return directNum;
	}

	public void setDirectNum(Integer directNum) {
		this.directNum = directNum;
	}

	public Integer getAlterNum() {
		return alterNum;
	}

	public void setAlterNum(Integer alterNum) {
		this.alterNum = alterNum;
	}

	public Integer getPileType() {
		return pileType;
	}

	public void setPileType(Integer pileType) {
		this.pileType = pileType;
	}

	public String getPileTypeAsString() {
		if (pileType == null) {
			return "未知";
		}
		switch (pileType) {
			case TYPE_AC:
				return "交流";
			case TYPE_DC:
				return "直流";
			default:
				return "未知";
		}
	}

	public String getOwnerNameAsString() {
		return ownerName == null ? "" : ownerName;
	}

	// public List<String> getIntroImgsAsList() {
	// if (introImgsList != null || introImgs == null
	// || introImgs.length() == 0) {
	// return introImgsList;
	// }
	//
	// introImgsList = new ArrayList<String>();
	// try {
	// JSONArray ja = new JSONArray(introImgs);
	// for (int i = 0; i < ja.length(); i++) {
	// introImgsList.add(ja.optString(i));
	// }
	// } catch (JSONException e) {
	// e.printStackTrace();
	// }
	// return introImgsList;
	// }
    // KEEP METHODS END

}
